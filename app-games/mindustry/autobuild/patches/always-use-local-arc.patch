diff --git a/build.gradle b/build.gradle
index 84cfbefca7ba..4f809c82945d 100644
--- a/build.gradle
+++ b/build.gradle
@@ -1,10 +1,14 @@
 buildscript{
     ext{
-        getArcHash = {
-            return new Properties().with{ p -> p.load(file('gradle.properties').newReader()); return p }["archash"]
-        }
+       arcHash = property("archash")
+
+       localArc = !project.hasProperty("release") && new File(rootDir.parent, 'Arc').exists() && !project.hasProperty("noLocalArc")

-        arcHash = getArcHash()
+       arcModule = { String name ->
+            //skip to last submodule
+            name = name.substring(name.lastIndexOf(':') + 1)
+            return "com.github.Anuken${localArc ? "" : ".Arc"}:$name:$arcHash"
+        }
     }

     repositories{
@@ -16,8 +20,8 @@
     }

     dependencies{
-        classpath "com.github.Anuken.Arc:packer:$arcHash"
-        classpath "com.github.Anuken.Arc:arc-core:$arcHash"
+        classpath arcModule(":extensions:packer")
+        classpath arcModule(":arc-core")
     }
 }

@@ -48,20 +52,6 @@
             return new File(projectDir.parent, '../Mindustry-Debug').exists() && !project.hasProperty("release") && project.hasProperty("args")
         }

-        localArc = {
-            return !project.hasProperty("release") && !project.hasProperty("noLocalArc") && new File(projectDir.parent, '../Arc').exists()
-        }
-
-        arcModule = { String name ->
-            if(localArc()){
-                return project(":Arc:$name")
-            }else{
-                //skip to last submodule
-                if(name.contains(':')) name = name.split(':').last()
-                return "com.github.Anuken.Arc:$name:${getArcHash()}"
-            }
-        }
-
         generateDeployName = { String platform ->
             if(platform == "windows"){
                 platform += "64"
@@ -331,8 +321,8 @@
         api arcModule("extensions:fx")
         api arcModule("extensions:arcnet")
         api "com.github.Anuken:rhino:$rhinoVersion"
-        if(localArc() && debugged()) api arcModule("extensions:recorder")
-        if(localArc()) api arcModule(":extensions:packer")
+        if(localArc && debugged()) api arcModule("extensions:recorder")
+        if(localArc) api arcModule(":extensions:packer")

         annotationProcessor 'com.github.Anuken:jabel:0.9.0'
         compileOnly project(":annotations")
@@ -423,7 +413,7 @@

     dependencies{
         implementation 'com.squareup:javapoet:1.12.1'
-        implementation "com.github.Anuken.Arc:arc-core:$arcHash"
+        implementation arcModule("arc-core")
     }
 }

diff --git a/settings.gradle b/settings.gradle
index fed0fcf07666..350dc8151128 100644
--- a/settings.gradle
+++ b/settings.gradle
@@ -33,39 +33,15 @@
     println("No Android SDK found. Skipping Android module.")
 }

-if(!hasProperty("release")){
-    if(new File(settingsDir, '../Arc').exists()){
-        use(
-        ':Arc',
-        ':Arc:arc-core',
-        ':Arc:extensions',
-        ':Arc:extensions:freetype',
-        ':Arc:extensions:recorder',
-        ':Arc:extensions:arcnet',
-        ':Arc:extensions:packer',
-        ':Arc:extensions:g3d',
-        ':Arc:extensions:fx',
-        ':Arc:extensions:flabel',
-        ':Arc:extensions:discord',
-        ':Arc:extensions:profiling',
-        ':Arc:natives',
-        ':Arc:natives:natives-desktop',
-        ':Arc:natives:natives-android',
-        ':Arc:natives:natives-ios',
-        ':Arc:natives:natives-freetype-desktop',
-        ':Arc:natives:natives-freetype-android',
-        ':Arc:natives:natives-freetype-ios',
-        ':Arc:backends',
-        ':Arc:backends:backend-sdl',
-        ':Arc:backends:backend-android',
-        ':Arc:backends:backend-robovm',
-        ':Arc:backends:backend-headless'
-        )
+if(!hasProperty("release") && !hasProperty("noLocalArc")){
+    if(new File(rootDir.parent, 'Arc').exists()){
+        println("Compiling with localArc")
+        includeBuild("../Arc")
     }

-    if(new File(settingsDir, '../Mindustry-Debug').exists()){
+    if(new File(rootDir.parent, 'Mindustry-Debug').exists()){
         include(":debug")
-        project(":debug").projectDir = new File(settingsDir, "../Mindustry-Debug")
+        project(":debug").projectDir = new File(rootDir.parent, "Mindustry-Debug")
     }
 }else{
     println("Not including local repositories.")

